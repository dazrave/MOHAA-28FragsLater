// 28 Frags Later Mod
// Written by Ophis
// With help by Falco
// Contact: ophis@daphi.co.uk
//
// Special thanks:

main:

    if (int(getcvar(28FragsLater)) != 2) {
        end
    }

    println "[DEBUG] Starting Gametype: infected"

// Make sure the script is NOT already running
    if (level.isRunning) {
        println "[DEBUG] Script Already Running. Terminating."
        end
    } else {
        level.isRunning = 1
    }

// Make sure TDM is running
    if (int(getcvar(g_gametype)) != 2)
    {
       println "[DEBUG] Improper gametype. Terminating."
       end
    }

// infected timelimit
    level.infectedTimelimit = 200 // in seconds
    println "[DEBUG] Timelimit in seconds: " level.infectedTimelimit

// Set the new gametype name
    setcvar "g_gametypestring" "28 Frags Later"

    level waittill prespawn
    println "[DEBUG] Prespawn Started"

    local.master = spawn ScriptMaster

// Spawn sounds here?

    level waittill spawn
    println "[DEBUG] Spawn Started"

// Set special effects
    $world farplane 1600
    $world farplane_color ( 0 0 0 ) {}
    $world farplane_cull 1

    thread forceFastSky
    // thread randomSoundEffects
    thread storm

// Set in game TAB information
    setcvar "g_obj_alliedtext1" "[28 Frags Later]"
    setcvar "g_obj_alliedtext2" "infected"
    setcvar "g_obj_alliedtext3" ""
    setcvar "g_obj_axistext1" ""
    setcvar "g_obj_axistext2" ""
    setcvar "g_obj_axistext3" "www.28fragslater.co.uk"

// Set level game state?
    level.inGame = 0

    println "[DEBUG] Wait 10."
    wait 10


// Continous Loop

    println "[DEBUG] Starting continous loop..."
    while (1) {
        local.inGame = 0 // Number of players in game is now ZERO

        // Loop around each player
        for (local.i = 1; local.i <= $player.size; local.i++) {

            // Check if player as already looped through
            if (!$player[local.i].isDone) {
                $player[local.i].isDone = 1
                $player[local.i] thread playerThinker
            }

            // If current player is alive
            // AND current player is not Spectating
            if (isAlive($player[local.i]) && $player[local.i].dmteam != spectator) {
                // If current player is not infected
                // AND current player is on axis
                // AND current player has spawned in game

                // CHANGE SOMETHING HERE
                // FORCE new players onto AXIS
                // LEAVE current players that have NOT died on ALLIES

                if ($player[local.i] != level.infected && $player[local.i].dmteam == axis && $player[local.i].inGame) {
                    if ($player[local.i].infected == 1) {
                        // THEN send current player back to axis
                        $player[local.i] thread sendToAxis
                    }
                }
            }

            // If current player is NOT alive
            // OR current player is spectating
            // AND current player is in game
            if ((!isAlive($player[local.i]) || $player[local.i].dmteam == spectator) && $player[local.i].inGame) {
                // THEN Set current player as dead and not in game
                // SET PLAYER to be INFECTED
                $player[local.i].isDone = 0
                $player[local.i].inGame = 0
                $player[local.i].infected = 1
            }

        }
        // end of loop

        level.inGame = local.inGame // Get number of players in game
        // println "[DEBUG] Players in Game: " level.inGame

        // If there is no infected, run selecting thread
        if (level.infected == NIL) {
            waitframe // just in case
            if (level.infected == NIL || level.infected == NULL) {
                thread selectinfected
            }
        }
        waitframe

    }
    // End of Continous Loop
end

playerThinker: // needs renaming ????????????
    // println "[DEBUG] Running Player Thinker Thread."

    self.inGame = 0 // Remove player from game
    if (self.infectionAmount == NIL) {
       self.infectionAmount = 0 // If they have never been infected
    }

    // Not sure what this does yet?
    local.trg = spawn trigger_multiple origin self.origin
    local.trg glue self
    local.trg.player = self

    // triggers the thread that spawns the player?
    local.trg setthread global/28fragslater.scr::spawnPlayer
    // Waits until player dies?
    while (self && local.trg) {
       waitframe
    }
    if (local.trg) {
       local.trg delete
    }
end

// When a player spawns (currently includes infected), run this script
// Needs a major rework to NOT include infected

spawnPlayer:
    // println "[DEBUG] Running Player Spawn Thread."

    // IF something equals local player (is this the player name??????)
    if (parm.other == self.player) {

        local.player = self.player // set player name??
        self delete // delete what???

        // Random Sound trigger?
        //local.player.sh_soundtime = level.time + 25.0 + randomfloat(15) // Level Time + 25 + (0 to 15)
        //println "[DEBUG] Spawning Player and setting skin."

        local.player.inGame = 1 // Set player as In Game
        $player[local.i].infected = 0 // Set player as not infected
        waitframe

        local.player join_team allies

        local.player respawn // Spawn the player

        waitframe
        //println "[DEBUG] Setting Player weapons."
        local.player takeall // Take all weapons away from player
        local.player item "models/weapons/colt45.tik" // Give player customised pistol NEEDS MAJOR REWORK (e.g don't use default pistol?)
        local.player useweaponclass pistol // Pull pistol into focus
        $player weaponcommand notdroppable // Prevent pistol from being dropped

    }
end

selectinfected:
    // println "[DEBUG] Selecting infected."

    // IF selecting already running then end
    if (level.selectinginfected) {
        // println "[DEBUG] infected exists. Terminating."
        end
    }

    //println "[DEBUG] Selecting infected. First Time."

    local.inGame = 0 // remove from game?
    local.least = 524288 // Least amount of times to be infected for??

    // IF number is less then or equal to amount of players in game
    // In other words, loop over script for every player in game
    for (local.i = 1; local.i <= $player.size; local.i++) {

        // If current player is in game, set local in game
        if ($player[local.i].inGame) {
            local.inGame++
            $player[local.i].infected = 0 // I THINK this will set everyone to NOT infected at round start. ???????????????????
        }

        // IF local player has NOT been infected first before...
        if ($player[local.i].infectionAmount != NIL) { // prevent idiotic errors
            // IF local player has been infected less then "least"
            if ($player[local.i].infectionAmount < local.least)
                local.least = $player[local.i].infectionAmount
            }
        }

        if (local.inGame < 2) { // no point in playing this on your own
            println "[DEBUG] Not enough players. Terminating"
            fadein 0 0 0 0 1
            end
        }

    // don't run this thread again
    level.selectinginfected = 1

    local.lastinfected = level.infected

selectinfectedAgain:
    println "[DEBUG] Selecting infected Again."
    local.infected = local.lastinfected

    local.inGame = 0 // remove from game?
    local.least = 524288 // Least amount of times to be infected for??

    // IF number is less then or equal to amount of players in game
    // In other words, loop over script for every player in game
    for (local.i = 1; local.i <= $player.size; local.i++) {

        // If current player is in game, set local in game
        if ($player[local.i].inGame) {
            local.inGame++
            $player[local.i].infected = 0 // again, i hope this will set everyone to uninfected.
        }

        // IF local player has NOT been infected first before...
        if ($player[local.i].infectionAmount != NIL) { // prevent idiotic errors
            // IF local player has been infected less then "least"
            if ($player[local.i].infectionAmount < local.least)
                local.least = $player[local.i].infectionAmount
            }
        }

        if (local.inGame < 2) { // no point in playing this on your own
            // println "[DEBUG] Not enough players. Terminating"
            end
        }

        while ((local.infected == local.lastinfected || local.infected.dmteam == spectator) && $player.size > 1) {
            local.infected = $player[randomint($player.size) + 1]
            $player[local.i].infected = 1 // SET the initial infected player to be infected all the time for this round.
            waitframe
        }

        if (local.infected == NIL || local.infected == NULL || local.infected.infectionAmount > local.least) {
            waitframe
            goto selectinfectedAgain
        }

        local.infected.infectionAmount++ // account for the times they played the murderer for

        level.infected = local.infected

        while (!level.infected.inGame) {
           waitframe
        }

        level.selectinginfected = 0
        level.proximityTrigger = 0

        // Setup infected
        println "[DEBUG] Setting up the first infected player."
        waitframe
        fadein 10 0 0 0 1
        waitframe
        local.infected respawn
        waitframe

        local.infected join_team axis // make infected join axis
        local.infected respawn // spawn the infected
        local.infected model "models/player/german_[Kapo]_Prisioner_1.tik" // Trigger infected skin
        waitframe

        local.infected takeall // take all guns
        local.infected give "models/weapons/colt45.tik"
        waitframe

        local.infected useweaponclass pistol
        wait 4 // wait 5 seconds

        local.infected iprint "You are infected..." // message JUST the infected
        wait 1
        local.infected iprint "Try to spread the infection!" // message JUST the infected
        // $world playsound lookout // play "lookout" sound
        waitframe

        // local.infected face ( 0 local.infected.viewangles[1] 0 ) // WHAT DOES THIS DO?

        local.infected.infectedExpiry = level.time + level.infectedTimelimit // current level time + timelimit that's set?

        // THIS NEEDS NEW COMMANDS TO DETECT WHEN EVERYONE HAS BEEN INFECTED ?????????????????????????????????????
       while (isAlive(local.infected) && level.infected == local.infected && local.infected.dmteam == axis) {
            for (local.i = 1; local.i <= $player.size; local.i++) {
                // If local player is not in game (dead?)
                if (!$player[local.i].inGame) {
                    // if local player is not in spectator
                    if ($player[local.i].dmteam != spectator && $player[local.i].dmteam != axis) {
                        // PROBABLY TIME TO SET THEM AS INFECTED
                        // println "[DEBUG] Another Player Infected."
                        $player[local.i].infected = 1
                        $player[local.i] stufftext "+attackprimary"
                        waitframe
                        $player[local.i] stufftext "-attackprimary"
                    }
                    if ($player[local.i].dmteam != spectator && $player[local.i].dmteam != allies) {
                        // PROBABLY TIME TO SET THEM AS INFECTED
                        println "[DEBUG] Another Player Infected."
                        $player[local.i].infected = 1

                        $player[local.i] join_team axis // make infected join axis
                        waitframe
                        $player[local.i] respawn // spawn the infected
                        $player[local.i] model "models/player/german_[Kapo]_Prisioner_1.tik" // Trigger infected skin
                    }
                    continue
                }
            }
            waitframe

        } // end of while loop

        println "[DEBUG] End of game."

        // Everyone is infected!
        iprintlnbold_noloc "There are no survivors left!"

        waitframe
        fadeout 10 0 0 0 1
        wait 5
        iprintlnbold_noloc "New infection..."

        println "[DEBUG] Clearing infection settings."

        local.infected.isDone = 0 // has died?
        local.infected.inGame = 0 // is not in game anymore
        $player[local.i].infected = 0 // No one is infected anymore

        // If the infected is NOT alive then keep waiting?
        while (!isAlive(local.infected)) {
            println "[DEBUG] infected is not alive..."
            waitframe
            local.infected stufftext "+attackprimary"
            waitframe
            local.infected stufftext "-attackprimary"
        }

        // If the infected is NOT on Axis
        while (local.infected.dmteam != axis) {
            println "[DEBUG] Sending infected to axis"
            local.infected join_team axis // Place onto axis
            local.infected model "models/player/german_[Kapo]_Prisioner_1.tik" // Change skin
            // local.infected respawn // spawn player!
            waitframe
        }

        local.infected respawn // last but not least, spawn the infected after completely setting him up!
        level.infected = NIL // and finally reset?

end
// end of "infected select again" thread

sendToAxis:
    println "[DEBUG] Switching a player to correct team."
    self spectator
    waitframe
    println "[DEBUG] Wait 5."
    wait 5
    self join_team axis
    self respawn
    self model "models/player/german_[Kapo]_Prisioner_1.tik" // Trigger infected skin
    waitframe
    self takeall // Take all weapons away from player
    self item "models/weapons/colt45.tik" // Give player customised pistol NEEDS MAJOR REWORK (e.g don't use default pistol?)
    self useweaponclass pistol // Pull pistol into focus
    self weaponcommand notdroppable // Prevent pistol from being dropped

    self iprint "You are infected!" 1
end

forceFastSky:
    println "[DEBUG] Starting forcefastsky."
    wait 2
    while (1)
    {
       $player stufftext "r_fastsky 1"
       //println "[DEBUG] Forcefastsky."
       wait 10
    }
end

randomSoundEffects:
    println "[DEBUG] Starting randomSoundEffects."
    local.music[1][0] = "sound/music/mus_06a_mystery.mp3"
    local.music[1][1] = 220
    local.music[2][0] = "sound/music/mus_15a_mystery.mp3"
    local.music[2][1] = 197
    local.music[3][0] = "sound/music/mus_16a_mystery.mp3"
    local.music[3][1] = 204
    local.music[4][0] = "sound/music/mus_17a_mystery.mp3"
    local.music[4][1] = 282
    local.music[5][0] = "sound/music/mus_17b_mystery.mp3"
    local.music[5][1] = 60
    local.music[6][0] = "sound/music/mus_17d_mystery.mp3"
    local.music[6][1] = 123
    local.music[7][0] = "sound/music/mus_Schmerzen_01g.mp3"
    local.music[7][1] = 125
    local.music[8][0] = "sound/music/mus_SniperTown_01b.mp3"
    local.music[8][1] = 69
    local.music[9][0] = "sound/music/mus_SniperTown_01f.mp3"
    local.music[9][1] = 105
    local.last = 0
    wait 2

    while (1) {
        local.num = randomint(local.music.size) + 1
        while (local.num == local.last) {
            local.num = randomint(local.music.size) + 1
            println "[DEBUG] Sound local.num: " local.num
        }
       local.last = local.num
       $player stufftext ("tmstop;tmstart " + local.music[local.num][0])
       wait (local.music[local.num][1])
    }
end

storm:
    println "[DEBUG] Started storm"
    while (1)
    {
       wait (30 + randomint(15))
       local.num = (randomint (3) + 1)
       switch (local.num)
       {
         case 1:
         //println "[DEBUG] Storm 1"
          $world farplane_color ( 0.9 0.9 0.9 )
          wait 0.2
          $world farplane_color ( 0 0 0 )
          wait 1
          $world farplane_color ( 0.9 0.9 0.9 )
          wait 0.1
          $world farplane_color ( 0 0 0 )
          wait 0.1
          $world farplane_color ( 0.9 0.9 0.9 )
          wait 0.1
          $world farplane_color ( 0 0 0 )
          wait (1 + randomfloat(2))
          $world playsound thunder
          break
         case 2:
         //println "[DEBUG] Storm 2"
          $world farplane_color ( 0.9 0.9 0.9 )
          wait 0.1
          $world farplane_color ( 0 0 0 )
          wait 0.1
          $world farplane_color ( 0.9 0.9 0.9 )
          wait 0.1
          $world farplane_color ( 0 0 0 )
          $world playsound thunder
          wait 1
          $world farplane_color ( 0.9 0.9 0.9 )
          wait 0.2
          $world farplane_color ( 0 0 0 )
          wait (1 + randomfloat(2))
          break
         case 3:
         //println "[DEBUG] Storm 3"
          $world farplane_color ( 0.9 0.9 0.9 )
          $world playsound thunder
          wait 0.1
          $world farplane_color ( 0 0 0 )
          wait 0.1
          $world farplane_color ( 0.9 0.9 0.9 )
          wait 0.2
          $world farplane_color ( 0 0 0 )
          wait 0.5
          $world farplane_color ( 0.9 0.9 0.9 )
          wait 0.1
          $world farplane_color ( 0 0 0 )
          wait (1 + randomfloat(2))
          break
       }
    }
end

